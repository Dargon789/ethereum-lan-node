version: '3.9'

services:

  traefik:
    image: "traefik:v2.1"
    container_name: "traefik"
    ports:
      - "80:80"
      - "8889:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik.yml:/traefik.yml:ro"

  # mdns:
  #   image: hardillb/traefik-avahi-helper
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #     - "/run/dbus/system_bus_socket:/run/dbus/system_bus_socket"
  
  ethereum:
    image: ethereum/client-go:v1.11.6
    ports:
      - "8545:8545"
    entrypoint: ['sh', '-c']
    command:
      [
        'mkdir -p $HOME/.geth-dev/keystore; echo ''$GETH_KEYSTORE_PASSWORD'' > $HOME/.geth-dev/password ;echo ''$GETH_KEYSTORE'' > $HOME/.geth-dev/keystore/$GETH_KEYSTORE_FILENAME; echo ''$GETH_GENESIS'' > $HOME/.geth-dev/genesis.json; geth --datadir $HOME/.geth-dev init $HOME/.geth-dev/genesis.json; geth --dev --nousb --ws --ws.addr "0.0.0.0" --ws.origins "*" --http --http.vhosts "*" --http.addr "0.0.0.0" --http.corsdomain "*" --miner.gasprice $GETH_GASPRICE --dev.period $GETH_BLOCK_TIME --rpc.allow-unprotected-txs --datadir $HOME/.geth-dev --password $HOME/.geth-dev/password',
      ]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ethereum.entrypoints=web"
      - "traefik.http.routers.ethereum.rule=PathPrefix(`/rpc`)"
      - "traefik.http.services.ethereum.loadbalancer.server.port=8545"
      - "traefik.http.middlewares.strip-rpc.stripprefix.prefixes=/rpc"
      - "traefik.http.routers.ethereum.middlewares=strip-rpc@docker"
    volumes:
      - geth-data:$HOME/.geth-dev

  whoami:
    image: "containous/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.rule=PathPrefix(`/whoami`)"
      - "traefik.http.middlewares.strip-whoami.stripprefix.prefixes=/whoami"
      - "traefik.http.routers.whoami.middlewares=strip-whoami@docker"

################################

  redis_db:
    extends:
      file: ./services/docker-compose-redis.yml
      service: redis_db

  db-init:
    extends:
      file: ./services/docker-compose-db.yml
      service: db-init

  db:
    extends:
      file: ./services/docker-compose-db.yml
      service: db

  backend:
    depends_on:
      - db
      - redis_db
    extends:
      file: ./services/docker-compose-backend.yml
      service: backend
    links:
      - db:database
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        BLOCK_TRANSFORMER: 'clique'

  visualizer:
    extends:
      file: ./services/docker-compose-visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./services/docker-compose-sig-provider.yml
      service: sig-provider

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/docker-compose-frontend.yml
      service: frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/explorer`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.middlewares.strip-explorer.stripprefix.prefixes=/explorer"
      - "traefik.http.routers.frontend.middlewares=strip-explorer@docker"

  stats-db-init:
    extends:
      file: ./services/docker-compose-stats.yml
      service: stats-db-init

  stats-db:
    depends_on:
      - backend
    extends:
      file: ./services/docker-compose-stats.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
    extends:
      file: ./services/docker-compose-stats.yml
      service: stats

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/docker-compose-nginx.yml
      service: proxy


networks:
  default:
    name: $TRAEFIK_DEFAULT_NETWORK
    external: true

volumes:
  geth-data: